{"ast":null,"code":"import _defineProperty from \"C:/Users/jaebu/Desktop/cocktail-v2/src/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar combineReducers = function combineReducers(reducers) {\n  return Object.keys(reducers).reduce(function (acc, curr) {\n    var slice = reducers[curr](undefined, {\n      type: undefined\n    });\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr, slice));\n  });\n};\n\nexport default combineReducers;","map":{"version":3,"sources":["C:/Users/jaebu/Desktop/cocktail-v2/src/client/reducers/combineReducers.js"],"names":["combineReducers","reducers","Object","keys","reduce","acc","curr","slice","undefined","type"],"mappings":";;;;;;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AAClC,SAAOC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,CAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACjD,QAAMC,KAAK,GAAGN,QAAQ,CAACK,IAAD,CAAR,CAAeE,SAAf,EAA0B;AAAEC,MAAAA,IAAI,EAAED;AAAR,KAA1B,CAAd;AACA,2CAAYH,GAAZ,2BAAkBC,IAAlB,EAAyBC,KAAzB;AACD,GAHM,CAAP;AAID,CALD;;AAOA,eAAeP,eAAf","sourcesContent":["const combineReducers = reducers => {\n  return Object.keys(reducers).reduce((acc, curr) => {\n    const slice = reducers[curr](undefined, { type: undefined });\n    return { ...acc, [curr]: slice };\n  });\n};\n\nexport default combineReducers;\n"]},"metadata":{},"sourceType":"module"}