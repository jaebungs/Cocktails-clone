{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_ALL_COCKTAILS } from '../constant';\nconst initialState = {\n  cocktails: []\n};\n\nconst cocktailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_COCKTAILS:\n      return _objectSpread(_objectSpread({}, state), action === null || action === void 0 ? void 0 : action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default cocktailsReducer;","map":{"version":3,"sources":["C:/Users/jaebu/Desktop/cocktail-v2/src/client/redux/reducers/cocktailsReducer.js"],"names":["GET_ALL_COCKTAILS","initialState","cocktails","cocktailsReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAL;AACE,6CACKI,KADL,GAEKC,MAFL,aAEKA,MAFL,uBAEKA,MAAM,CAAEE,OAFb;;AAKF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,gBAAf","sourcesContent":["import { GET_ALL_COCKTAILS } from '../constant';\n\nconst initialState = {\n  cocktails: [],\n};\n\nconst cocktailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_COCKTAILS:\n      return {\n        ...state,\n        ...action?.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cocktailsReducer;\n"]},"metadata":{},"sourceType":"module"}